c
n
views/altama_exe/giveaway_form
bot
c
Commodity.find_by_id(5872)
Commodity.last
@commodity
@commodity.update(commodity_params)
commodity_params
params
c
self.commodity_id.nil?
c
Commodity.last
self
c
TradeRun.create()
TradeRun.last
    TradeRun.create(
        trade_session_id: params[:trade_run][:trade_session_id],
        username: params[:trade_run][:username],
        ship: params[:trade_run][:ship],
        usership_id: params[:trade_run][:user_ship],
        split: params[:trade_run][:split],
        locked: params[:trade_run][:locked],
        delta: params[:trade_run][:delta],
        profit: params[:trade_run][:profit],
        buy_location: params[:trade_run][:buy_location],
        sell_location: params[:trade_run][:sell_location],
        payout_complete: params[:trade_run][:payout_complete],
        last_updated: Time.now
    )
params[:trade_run][:username]
username: params[:trade_run][:username]
params[:trade_run][:trade_session_id]
TradeRun.last
c
TradeRun.last
commodities = JSON.parse(params[:trade_run][:split_cmdty_json])
params[:trade_run][:split_cmdty_json]
params
params[:split_cmdty_json]
params[:commodity_json]
TradeRunSplit
params
c
params
c
params
c
params
c
params
parrams
c
params[:trade_run][:trade_run_split]
params[:trade_run]
params[trade_run]
params[trade_run}
params[:trade_run}
params
c
params
c
params
c
params
pararms
c
params
c
params
c
Article.find_by_id(808)
@article.find_by_id(808)
params[:id]
params
params[:article][:id]
c
params[:article][:title]
params[:article]
article_params[:title]
c
@current_user
params
params[:article][:location]
params[:article][:location][:title]
Article.first
Article.fist
params[:article][:location]
params[:article]
params[:location]
params
article_params[:location]
article_params
@article.update(article_params)
@article.update
c
@article.location.update("HDMS-Bezdek")
@article.location.update(HDMS-Bezdek)
@article
location
c
@article.lcation
@article
@article.location
c
location
c
!location
location
c
article_params[:article_type]
article_params
article_params[:article_type] == "location"
c
location
c
params
c
article_params
c
article_params
carticle_params
c
article_params
@article
c
params
paarams
article_params
@article
c
params
location
paramslocation
c
Location.last
params[:article][:parent]
params
update_location
require_login
c
      location.update(
        parent: params[:article][:parent], 
        location_type: params[:article][:location_type],
        ammenities_fuel: params[:article][:ammenities_fuel],
        ammenities_rearm: params[:article][:ammenities_rearm],
        ammenities_repair: params[:article][:ammenities_repair], 
        trade_terminal: params[:article][:trade_terminal]
      )
location
c
update_location
c
Location.find_by_name(@article.location).trade_terminal
Location.find_by_name(@article.location)
@article.location
c
location
          location.update(parent: params[:article][:parent], location_type: params[:article][:location_type],
          ammenities_fuel: params[:article][:ammenities_fuel],ammenities_rearm: params[:article][:ammenities_rearm],
          ammenities_repair: params[:article][:ammenities_repair], trade_terminal: params[:article][:trade_terminal]
          )
params[:article][:trade_terminal]
c
location
c
params[:format]
params
c
controller_name
controller.name
controller
c
buy_commodity
c
buy_search_query
buy_commodity
buy_commodity = Commodity.search_by_name_and_location(buy_search_query).first
buy_search_query = "#{commodity_name} #{from_location}"
commodity_name
c
buy_commodity
c
search_query = "#{commodity_name} #{from_location}"
buy_commodity
c
commodity_name
from_location
buy_commodity
c
commodity_name
commodity
buy_commodity 
c
commodity_name
Commodity.where("location LIKE ? AND name ILIKE ?", "%#{from_location}%", "%#{commodity_name}%").first
c
commodity
request.body.read
commodity
commidity
commodity
c
buy_commodity > 0 &&  sell_commodity > 0
sell_commodity
buy_commodity
c
@task_manager.tasks.first
@task_manager.tasks.last
@task_manager.tasks
@task_manager
@current_task
c
command
c
@current_task.state.split("-").last
@current_task.state.split("-")
@current_task.state
@current_task.state[-1]
@current_task.state[1]
@current_task.state[0]
@current_task[0]
@current_task[-1]
@current_task.last
@current_task.lastt
@current_task
@task
task
c
@task
@task.update(state:"trade123|#{command}")
@task
task
@task.update(state:'trade123|#{command}')
command
params[:format]
params
c
 date = Date.parse(params[:trade_session][:session_date])
TradeSession
params[:trade_session][:session_date]
params
parrms
c
Commodity.where(name: title).where('sell > ?', 0).first
Commodity.where(name: title).where('sell > ?', 0)
c
TradeRun.last
params
c
trade_run.sell_price > 0 
trade_run.sell_price
trade_run
