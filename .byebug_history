c
params[:query]
params
c
params[:query][:query]
params[:query]
params[:query][0]
params[:query][0..1]
params[:query][0..-1]
params[:query][1..-1]
params[:query]
params
command
c
params[:event_series][:start_date_0].blank?
params[:event_series][:start_date_1].blank?
params[:event_series][:start_date_1].nil?
c
x
params[:event_series][:start_date_1].nil?
params[:event_series][:start_date_1]
total_events
c
params[:event_series]["start_date_#{i}".to_sym]
"start_date_#{i}".to_sym
params
"start_date_0#{i}".to_sym
params[:event_series]["start_date_0#{i}".to_sym]
params[:event_series]["start_date_#{i}".to_sym]
params[:event_series]["start_date_#{i}".to_sym])
"start_date_0#{i}".to_sym
"start_date_#{i}".to_sym
c
EventSeries.find_by_id(self.event_series_id).title
c
@event_series = EventSeries.new(event_series_params)
event_series_params
c
Event.last
c
Event
c
new_events
c
params[:event_series][:start_date_0]
params[:event_series]
params
params[:description]
params[start_date_0]
params[:start_date_0]
params
c
EventShip.create(event_user_id: EventUser.last.id, usership_id: event_user_params[:usership_id] )
EventShip.last
event_user_params[:usership_id]
event_user_params[:usership_id
EventUser.last.id
params
c
self.joined?(current_user)
current_user
self.joined?
EventUser.find_by(user_id: current_user.id, event_id: event.id)
current_user
c
params
@current_user
@current_usr
current_user
c
@event_user
c
event_user_params
params
@event_user
c
params
params[:event_user][:user_id] = current_user.id
params[:event_user][:user_id]
params[:request]
event_user_params
event_user_params[:user_id]
current_user.id
@event_user
c
event_user_params[:user_id] = current_user.id
event_user_params.update(user_id:current_user.id)
current_user
event_user_params.update(user_id:current_user)
@event_user
c
EventUser.first
@event_user
params
c
@current_task = @all_tasks.find_by(name: "Conquest" )
@all_tasks
Rails.application.routes.recognize_path(request.referrer)
@current_task
@task_manager
c
@task_manager
@current_task
path
c
current_user
@event_user.update(user_id: current_user.id)
params
 @event_user
c
Usership.where(ship_name:"Starfarer")
Usership.last
Userships.last
userships.where(fleetship:1)
@myfleetships
c
current_user.userships.first
current_user.usership
current_user.ship
current_user
c
params
c
params
c
params[:text_entry]
params
c
params
c
File.new("app/views/desktop/apps/shell_apps/files/out.moo", "w")
File.directory?('app/views/desktop/apps/shell_apps/files/')
File.directory?('app/views/desktop/desktop/apps/shell_apps/files/')
Rails.root
File.directory?('app/views')
File.directory?('app/view')
File.directory?('app/views')
File.directory?('app')
File.directory?(app)
File.directory?()
File.directory?
File.dirname('~/views')
File.dirname('~/app')
File.dirname('app')
File.dirname('/app')
File.dirname('/apps')
File.dirname('/')
File.dirname(/)
File.dirname
File
File.new("/out.moo", "w")
File.new("/app/views/desktop/desktop/apps/shell_apps/files/out.moo", "w")
File.new("app/views/desktop/desktop/apps/shell_apps/files/out.moo", "w")
c
File.new("out.moo", "w")
c
Task.second
Task.first
Task.find_by_id(24)
Task.find_by_id(25)
@task
task
tasks
c
Task.last.destroy
Task.last
@current_task
current_task
@fullscreen_tasks
c
params[:query]
params
c
response
params
c
html = JSON.parse(resp.body)['Seggellion']
html = JSON.parse(resp.body)['username']
html = JSON.parse(resp.body)[:username]
html = JSON.parse(resp.body)[':username']
html = JSON.parse(resp.body)
resp
html = JSON.parse(resp.body)['Data']
resp = RestClient.get("https://discord.com/api/guilds/355082120034779136/widget.json")
RestClient
doc = JSON.parse(open(URL))
URL = "https://discord.com/api/guilds/355082120034779136/widget.json"
open
JSON
Discordrb
c
@memos.empty?
@memos
c
task
c
@memos.empty?
c
memo_type
c
user[:user]
user[:id]
user.id
user
c
Task.last
Task
@current_user
current_user
@task_manager
@all_task
@all_tasks
c
@allships
c
org_ships = Usership.where(show_information:1)
@allships + org_ships_match
org_ships_match
@allships
c
@allships
c
@allships + org_ships_match
org_ships_match = org_ships.where(user_id: user.id)
user = current_user
org_ships_match = org_ships.where(user_id: user.id)
org_ships = Usership.where(show_information:1)
Usership.first
@allships
c
org_ships.blank?
org_ships.nil?
org_ships
@usership.nil?
@usership
c
@allships
c
@allships.blank?
@allships.blank
@allships.nil?
@allships
c
primary_userships.update_all(primary:0)
primary_userships
primary_userships = Usership.where(user_id: current_user.id, primary: 1)  
primary_userships
primary_userships.update_all(primary:0)
primary_usership.update_all(primary:0)
Usershipprimary_userships = Usership.where(user_id: current_user.id, primary: 1)  
usership_params[:primary]
usership_params[:primary] == 1
c
primary_userships = Usership.find(user_id: current_user.id, primary: true)
usership_params
c
