c
params[:milk_run][:public]
params
c
paramsc
params
params[:milk_run][:sell_location]
JSON.parse(params[:milk_run][:sell_location])
c
c]
params[:user_id]
params
params[:public]
c
root_path
root_oath
URI
url
page
template
request
params
request.path
request.original_url
request.original_url.include?(user.username)
user.username
c
n
user
MilkRun.last
buy_commodity_id
MilkRun.find_by(buy_commodity_id: buy_commodity_id, sell_commodity_id: nil)
n
params[:milk_run][:user_id]
params[:milk_run][:user_id]&.empty?
user
n
Ship.find(params[:milk_run][:ship_id])&.scu
n
params[:milk_run][:form_type]
c
sell_commodity
out_of_family
c
params
sell_commodity
c
sell_commodity
CommodityStub.create!(user_id: current_milkrun.user_id, commodity_id: sell_commodity.id, buy_price: params[:milk_run][:sell_commodity_price])
c
sell_commodity
sell_commodit
sell_commodity
current_milkrun
c
commodity.sell > 0
c
commodity.sell > 0
c
commodity.sell > 0
c
commodity.sell > 0
commodity.sell
commodity
commodity.buy
c
Location.find_by(name:"Area18 - TDD").update(trade_terminal:true)
Location.find_by(name:"Area18 - TDD")
Location.where(parent:"ArcCorp")
Location.find_by(name:"Area 18 - TDD")
@sell_commodity
@buy_commodity
c
Location.find_by(name:"Shubin Mining Facility SCD-1").update(trade_terminal:true)
Location.find_by(name:"Shubin Mining Facility SCD-1")
@trade_locations
from_location = @trade_locations.search_for(from_location_string).first&.name
from_location_string = @json_request["from_location"]
@sell_commodity
@to_user
 player_name 
@trade_locations
@starbits
@commodity_name
c
@sell_commodity
@buy_commodity
c
@to_user
c
user
c
buy_commodity
records_exist
c
to_location
c
to_location
c
Location.search_for("TDD")
Location.search_for(to_location_string)
to_location_string
to_location
c
Location.search_for(to_location_string).first
Location.search_for(to_location_string)
to_location
c
to_location = Location.search_for(to_location_string).second
to_location = Location.search_for(to_location_string).first
to_location = Location.search_for(to_location_string)
  to_location_string = @json_request["to_location"]
to_location_string
from_location
c
Location.search_for(to_location_string)
to_location
c
Location.search_for(to_location_string).first
Location.search_for(to_location_string)
to_location_string
to_location
c
Commodity.where(name: @commodity_name, location: to_location)
to_location
c
@sell_commodity = Commodity.find_by(name: @commodity_name, location: to_location).where('buy > ?', 0)&.first
@sell_commodity = Commodity.find_by(name: @commodity_name, location: to_location)&
c
to_location
@commodity_name
Commodity.find_by(name: @commodity_name, location: to_location)
@sell_commodity = Commodity.find_by(name: @commodity_name, location: to_location)
commodity_name
to_location
@sell_commodity = Commodity.find_by(name: commodity_name, location: to_location).where('buy > ?', 0)
c
@sell_commodity
c
handle_buy_trade(records_exist, @buy_commodity, @total_units, @to_user, @starbits)
@buy_commodity.present? && @sell_commodity.present?
c
setup_trade_variables
c
(sell_commodity.buy.to_i * total_units) - capital
capital = buy_commodity.sell * total_units
buy_commodity.sell * total_units
capital = buy_commodity.sell to_i * total_units
buy_commodity = current_run.commodity
current_run.commodity
current_run
sell_commodity.buy.to_i * total_units
ell_commodity.buy.to_i * total_units
capital
 total_units
sell_commodity.buy.to_i
total_profit
c
Commodity.where(active: true).search_by_name_and_location(sell_search_query).where('buy > ?', 0).first
Commodity.where(active: true).search_by_name_and_location(sell_search_query)
Commodity.where(active: true)
Commodity.where(active: true).search_by_name_and_location(sell_search_query).where('sell > ?', 0).first
sell_search_query = "#{commodity_name} #{to_location}"
to_location = @json_request["to_location"]
commodity_name = @json_request["commodity"]
find_sell_commodity
@sell_commodity
@sell_commodity.present?
@buy_commodity.present?
records_exist
c
sell_search_query = "#{commodity_name} #{to_location}"
to_location = @json_request["to_location"]
commodity_name = @json_request["commodity"]
 @json_request["to_location"]
@json_request["commodity"]
find_sell_commodity
@sell_commodity
current_run
records_exist
c
json_request["secretguid"]
find_sell_commodity
sell_commodity
records_exist
exit
EIXT
CC
C
sell_commodity.present?
records_exist
User.find_by(username: player_name)
json_request["player_name"]
c
json_request["player_name"]
c
json_request["player_name"]
c
params
parse_request["player_name"]
parse_request["player_name"
parse_request["player_name"]
parsed_json["commodity"]
json_request["player_name"]
c
sell_search_query
@active_commodities
@active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first
c
@secretguid 
ENV['STARBITIZEN_EXCHANGE']
secretguid
received_guid
c
find_sell_commodity
c
handle_buy_trade(records_exist, buy_commodity, total_units, to_user, @starbits)
c
fetch_or_create_user(player_name)
c
 to_user = fetch_or_create_user(player_name)
total_units = @json_request["total_units"].to_i
buy_commodity = @active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first
buy_search_query = "#{@commodity_name} #{from_location}"
 sell_commodity = @active_commodities.search_by_name_and_location(sell_search_query).where('buy > ?', 0).first
sell_search_query = "#{@commodity_name} #{to_location}"
c
validate_secret_guid
c
 validate_secret_guid
c
@secretguid
received_guid
c
received_guid
@secretguid 
validate_secret_guid
c
@starbits
capital = buy_commodity.sell.to_i * actual_removed
buy_commodity.sell.to_i * actual_removed
c
@secretguid
c
response
c
capital
c
[buy_commodity.maxInventory, total_units].min
Commodity.find_by_id(351).update(maxInventory:60)
actual_removed
buy_commodity.sell
capital
c
@active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first.inventory
@active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first
