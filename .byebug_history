c
to_location
c
to_location
c
Location.search_for("TDD")
Location.search_for(to_location_string)
to_location_string
to_location
c
Location.search_for(to_location_string).first
Location.search_for(to_location_string)
to_location
c
to_location = Location.search_for(to_location_string).second
to_location = Location.search_for(to_location_string).first
to_location = Location.search_for(to_location_string)
  to_location_string = @json_request["to_location"]
to_location_string
from_location
c
Location.search_for(to_location_string)
to_location
c
Location.search_for(to_location_string).first
Location.search_for(to_location_string)
to_location_string
to_location
c
Commodity.where(name: @commodity_name, location: to_location)
to_location
c
@sell_commodity = Commodity.find_by(name: @commodity_name, location: to_location).where('buy > ?', 0)&.first
@sell_commodity = Commodity.find_by(name: @commodity_name, location: to_location)&
c
to_location
@commodity_name
Commodity.find_by(name: @commodity_name, location: to_location)
@sell_commodity = Commodity.find_by(name: @commodity_name, location: to_location)
commodity_name
to_location
@sell_commodity = Commodity.find_by(name: commodity_name, location: to_location).where('buy > ?', 0)
c
@sell_commodity
c
handle_buy_trade(records_exist, @buy_commodity, @total_units, @to_user, @starbits)
@buy_commodity.present? && @sell_commodity.present?
c
setup_trade_variables
c
(sell_commodity.buy.to_i * total_units) - capital
capital = buy_commodity.sell * total_units
buy_commodity.sell * total_units
capital = buy_commodity.sell to_i * total_units
buy_commodity = current_run.commodity
current_run.commodity
current_run
sell_commodity.buy.to_i * total_units
ell_commodity.buy.to_i * total_units
capital
 total_units
sell_commodity.buy.to_i
total_profit
c
Commodity.where(active: true).search_by_name_and_location(sell_search_query).where('buy > ?', 0).first
Commodity.where(active: true).search_by_name_and_location(sell_search_query)
Commodity.where(active: true)
Commodity.where(active: true).search_by_name_and_location(sell_search_query).where('sell > ?', 0).first
sell_search_query = "#{commodity_name} #{to_location}"
to_location = @json_request["to_location"]
commodity_name = @json_request["commodity"]
find_sell_commodity
@sell_commodity
@sell_commodity.present?
@buy_commodity.present?
records_exist
c
sell_search_query = "#{commodity_name} #{to_location}"
to_location = @json_request["to_location"]
commodity_name = @json_request["commodity"]
 @json_request["to_location"]
@json_request["commodity"]
find_sell_commodity
@sell_commodity
current_run
records_exist
c
json_request["secretguid"]
find_sell_commodity
sell_commodity
records_exist
exit
EIXT
CC
C
sell_commodity.present?
records_exist
User.find_by(username: player_name)
json_request["player_name"]
c
json_request["player_name"]
c
json_request["player_name"]
c
params
parse_request["player_name"]
parse_request["player_name"
parse_request["player_name"]
parsed_json["commodity"]
json_request["player_name"]
c
sell_search_query
@active_commodities
@active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first
c
@secretguid 
ENV['STARBITIZEN_EXCHANGE']
secretguid
received_guid
c
find_sell_commodity
c
handle_buy_trade(records_exist, buy_commodity, total_units, to_user, @starbits)
c
fetch_or_create_user(player_name)
c
 to_user = fetch_or_create_user(player_name)
total_units = @json_request["total_units"].to_i
buy_commodity = @active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first
buy_search_query = "#{@commodity_name} #{from_location}"
 sell_commodity = @active_commodities.search_by_name_and_location(sell_search_query).where('buy > ?', 0).first
sell_search_query = "#{@commodity_name} #{to_location}"
c
validate_secret_guid
c
 validate_secret_guid
c
@secretguid
received_guid
c
received_guid
@secretguid 
validate_secret_guid
c
@starbits
capital = buy_commodity.sell.to_i * actual_removed
buy_commodity.sell.to_i * actual_removed
c
@secretguid
c
response
c
capital
c
[buy_commodity.maxInventory, total_units].min
Commodity.find_by_id(351).update(maxInventory:60)
actual_removed
buy_commodity.sell
capital
c
@active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first.inventory
@active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0).first
buy_commodity.inventory
buy_commodity
buy_commodity.inventory > 0
c
Commodity.find_by_id(351).update(inventory:60)
@active_commodities.search_by_name_and_location(buy_search_query).where('sell > ?', 0)
sell_commodity
buy_commodity
c
Commodity.search_by_name_and_location(buy_search_query)
sell_commodity.buy.to_i
records_exist = buy_commodity.present? && sell_commodity.present?
buy_commodity.present?
sell_commodity.present?
c
sell_commodity.present?
sell_commodity
c
sell_commodity.present?
sell_commodit.present?
sell_search_query
sell_commodity
c
buy_commodity
c
active_tasks.state.split(',')
active_tasks = @all_tasks.find_by(state: params[:window])
@all_tasks.find_by(state: params[:window])
@all_tasks.find_by(name: params[:window])
params[:window]
@all_tasks
active_task
c
windows.find_by(params[:window])
windows = active_task.state.split(',')
active_task.state.split(',')
active_task.state
active_task
params[:window]
active_task
c
Commodity.where(active:nil).update(active:true)
Commodity.last
 @active_commodities
buy_commodity
params
c
capital
c
total_units
starbits
capital
c
capital <= starbits
capital
c
task
buy_commodity
buy_commodity.sell.to_i
capital
c
@secretguid
c
 Task.all.detect { |task| task_name.include?(task.name) }
task_name = task
 Task.all.detect { |task| task_name.include?(task.name) }
task
Task.all.detect { |task| task.include?(task.name) }
Task.all.detect { |task| task.name.include?(task) }
Task.all.detect { |task| task.include?(task.name) }
Task.all.detect { |task| task_name.include?(task.name) }
task
 Task.where('name LIKE ?', "%#{task}%").first
 Task.where('name LIKE ?', "%#{task}%").first.name
task
@all_tasks.include?(task)
@all_tasks.include?("task")
task
@all_tasks.includes?("task")
@all_tasks
@my_tasks
@task
task
params
@current_task
@current_task.name.downcase.parameterize.underscore
task
c
task.name.downcase.parameterize.underscore
task.name
task
c
@current_user.task_manager
@current_user
