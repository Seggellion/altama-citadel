c
usership_params[:model]
usership_params
params
params[:ship_model]
c
all_ships.count
exit
c
ccc
c
cc
ccc
c
cc
c
cc
c
cc
c
cc
c
ccc
c
cc
c
all_ships.count
c
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)[200~all_ships = Usership.where(user_id: self.id, ship_name: ship.model)~
all_ships.count
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
ship.model
ship.Model
c
Usership.first
ship.model
ship_model
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
ship.model
ship
Usership.where(user_id: self.id, ship_name: ship.model)
sership.where(user_id: self.id, ship_name: ship.model)
sership.where(user_id: self.id, ship_name: ship.model)]]]]
c
@usership.update(user_id:current_user.id)
@usership = Usership.new(usership_params)
@usership.update(user_id:current_user.id)
Usership.new(usership_params)
usership_params
c
usership_params
c
 @usership.errors.full_messages
 @usership.full_messages
 @usership.update(user_id: 2).full_messages
 @usership.update(user_id: 2).errors.full_messages
 @usership.update(user_id: 2)
 @usership.update(user_id: current_user.id)
 @usership.update(user_id:current_user.id)
@usership
current_user.id
current_user
@usership.update(user_id:current_user.id)
@usership = Usership.new(usership_params)
Ship.find_by_model("600i Executive Edition")
params
c
params
c
usership.ship.code
c
usership.ship.code
c
usership.ship.code
usership.ship
c
usership.ship
self
usership
usership.ship.code
usership.ship
usership.shipi
usership
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
Ship.find_by_model("Endeavor")
key["name"]
c
@model = key["name"]
c
Ship.find_by_model("Caterpillar")
Ship
@model = key["name"]
c
key["name"]
c
key["name"]
word
c
@ship_model = Ship.where("model ILIKE ?", "%#{word}%").first
key["name"]
@ship_model = Ship.where("model ILIKE ?", "%#{word}%").first
Ship.find_by_model("Pioneer")
@ship.find_by_model("Pioneer")
key["name"]
@ship_model
word
c
@ship_model = Ship.where("model ILIKE ?", "%#{word}%").first
word
@ship_model
c
@ship_model
word
c
@ship_model
word
woord
c
@ship_model = Ship.where("model ILIKE ?", "%#{word}%").first
@ship_model
word
woord
c
@ship_model
word
c
@ship_model
word
c
word
c
word
c
word
c
word
c
@ship_model
@ship_moodel
word
c
xc
Ship.find_by_model("Carrack")
Ship.first
Ship
@model
key["name"]
@model
@ship_model
c
@ship_model.model
@ship_model
@model
@ship_model
c
commodity.location.nil?
c
commodity.location.nil?
commodity
c
found_location
c
found_location
c
found_location
c
found_location
c
found_location
c
found_location
c
found_location
c
params[:article][:location_type]
c
 params[:article][:location_type]
system
c
Location.find_by_name("Stanton").update(parent:"Stanton",  system:"Stanton")
Location.find_by_name("stanton").update(parent:"Stanton",  system:"Stanton")
Location.find_by_id(params[:article][:parent_location_id]).system
Location.find_by_id(params[:article][:parent_location_id])
parent = params[:article][:parent_location_id]
continue
c
Location.create(name: params[:article][:title], parent: parent, location_type: location_type, system: system, image: params[:article][:featured_image])
c
params[:article][:location] == ""
params[:article][:location] 
params[:article][:article_location_id] == ""
params[:article]
params[:article][:article_location_id]
@article
c
buy_commodity.sell
buy_commodity.sell.to_i * total_units.to_i
sell_commodity.buy.to_i * total_units.to_i
total_units
sell_commodity.buy * total_units
sell_commodity.buy.to_f
sell_commodity
c
params
c
params
c
params[:trade_run][:split] == true
params[:trade_run][:split]
params
cparams
c
Commodity.find_by_id(6145)
split.commodity
split
c
self.commodity.present?
self.commodity
self.commodity_id.nil?   
self
c
params[:trade_run][:split] == true
