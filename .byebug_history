c
 Location.where(parent: self.name)
Location.where(parent: self.name).where.not(location_type: ['planet', 'moon', 'star', 'sector'])
self.name
self
self.id
 Location.where(parent: self.id).where.not(location_type: ['planet', 'moon', 'star', 'sector'])
c
@current_task = @fullscreen_tasks.first.present? ? @fullscreen_tasks.first : @windowed_tasks.first.present? ? @windowed_tasks.first : nil
@current_task = @fullscreen_tasks.first.present? ? @fullscreen_tasks.first : @windowed_tasks.first.present? ? @windowed_tasks.first
@windowed_tasks.first
@current_task = @fullscreen_tasks.first ? @fullscreen_tasks.first : @windowed_tasks.first ? @windowed_tasks.first
@current_task = s@fullscreen_tasks.first ? @fullscreen_tasks.first : @windowed_tasks.first ? @windowed_tasks.first
@current_task = s@fullscreen_tasks.first  ? @fullscreen_tasks.first  : @windowed_tasks.first ? @windowed_tasks.first
@current_task
 @current_task = @fullscreen_tasks.first | @windowed_tasks.first
@windowed_tasks
@current_task
@all_tasks
Task.last
@current_task
c
@myships.first.ship.length
@myships.last.ship.length
@myships.last.ship
c
@myships.last.ship
@myships.last
@myships.first.ship
.ship
@myships.first
return
c
Ship.where("model ILIKE ?", "%#{@model}%").first
Ship.where("model ILIKE ?", "%#{@model}%")
@model
@ship_model = Ship.where("model ILIKE ?", "%#{@model}%").first 
Ship.last
@model = key["name"]
@ship_model = Ship.where("model ILIKE ?", "%#{@model}%").first 
key
@ship_model
c
key
@ship_model
c
@ship_model
c
@ship_model = Ship.where("model ILIKE ?", "%#{@model}%").first 
@model = key["name"].split(" ").first
@ship_model = Ship.where("model ILIKE ?", "%#{@model}%").first 
key
@ship_model
c
@ship_model = Ship.where("model ILIKE ?", "%#{@model}%").first 
@model = key["name"].split(" ").first
key
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
ship@model
c
@ship_model
c
Ship.last
Ship.all
@model
@ship_model
c
!@ship_model.present?
D!@ship_model.present?
@ship_model.present?
c
@ship_model
c
name
c
return
c
Ship.where("model ILIKE ?", "%#{@model}%").first 
@model
@model = key["name"].split(" ").first
@model
Ship.where("model ILIKE ?", "%#{@model}%")
key["name"].split(" ").first
@model = key["ship_name"].split(" ").first
Ship.where("model ILIKE ?", "%#{@model}%").size== 0
@model = key["name"].split(" ").last
 Ship.where("model ILIKE ?", "%#{@model}%").size == 0
@ship_model = Ship.where("model ILIKE ?", "%#{@model}%").first 
@model = key["name"]
@model = key["ship_name"]
puts('res.cmd_tuples: ' + res.cmd_tuples.to_s)
res = ActiveRecord::Base.connection.execute(query)
query
query = "SELECT id FROM public.ships where model = '" + @name + "' OR alt_ship_name = '" + @name + "'"
"SELECT id FROM public.ships where model = '" + @name + "' OR alt_ship_name = '" + @name + "'"
@name = v 
c
@name = v 
c
@name = v 
c
@name = v 
@name
key
value
v
k
key
return
k
c
k
c
k
c
key
value
k
key
c
key
c
key
v
c
k
c
k
c
k
c
v
k
ck
c
cc
c
ship_hash.first
ship_hash[1]
ship_hash[0]
ship_hash
ship_hash = JSON.parse(JSON.dump(key))
key
c
key
c
key
c
key
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
key
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
c
@ship_model
