c
Vote.last
Vote
@vote
nomination
position
c
PositionNomination.last
params[:nomination]
PositionNomination.find_by_id(params[:nomination])
params
@vote
c
position.position
c
position.userc
position.user
position.nominator
position
position.position
position.positions.first
position.positions
position.position
position
c
giveaway_params
c
handle_locations(commodity, commodity_data['data']['buyLocations'])
c
handle_locations(commodity, commodity_data['data']['buyLocations'])
commodity_data
c
commodity_data
c
commodities[0]
commodiities[0]
c
location_key["name"]
c
commodity_json["data"]["buyLocations"][3]
commodity_json["data"]["buyLocations"][2]
commodity_json["data"]["buyLocations"][1]
commodity_json["data"]["buyLocations"][0]
commodity_response
new_url
key
key["location"]
key["name"]
c
json["data"]["commodities"][0]
json["data"]["commodities"][name:"Titanium"]
json["data"]["commodities"]["Titanium"]
json["data"]["commodities"]
c
location_key["name"]
c
location_key["name"]
key["name"]location_key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
location_key["name"]
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
c
key["name"]
existing_timestamp
c
existing_timestamp 
c
key["name"]
location_key["buy"]
c
params[:article][:location][:location_type].nil?
params[:article]
params[:article][:location]
params[:article][:location][:location_type]
c
@article
@article.location
c
Commodity.where(location:nil).destroy_all
commodity.destroy
commodity
c
commodity.destroy
commodity
commodity.location
c
commodity.destroy
commodity
c
sell_commodity
Commodity.search_by_name_and_location(sell_search_query).order("DATE(updated_at) DESC").first
Commodity.search_by_name_and_location(sell_search_query).order("DATE(updated_at) DESC").last
sell_commodityCommodity.search_by_name_and_location(sell_search_query).order("DATE(updated_at) DESC").last
sell_commodity
sell_commodity 
c
Commodity.search_by_name_and_location(sell_search_query).order("DATE(updated_at) DESC")
 Commodity.search_by_name_and_location(sell_search_query)
 Commodity.search_by_name_and_location(sell_search_query).
Commodity.search_by_name_and_location(sell_search_query).order("DATE(updated_at) DESC")
Commodity.search_by_name_and_location(sell_search_query).order("DATE(updated_at) DESC").last
Commodity.search_by_name_and_location(sell_search_query).order("DATE(updated_at) DESC").first
Commodity.search_by_name_and_location(sell_search_query).order(updated_at: :asc)
Commodity.search_by_name_and_location(sell_search_query).order(updated_at: :desc)
Commodity.last
sell_commodity 
c
Commodity.create(name:"WiDow", sell:0.0, updated_at: Time.now, buy:2100, location:"GrimHex", vice:true)
Commodity.search_by_name_and_location(sell_search_query).order(updated_at: :desc).last
sell_commodity
c
Commodity.search_by_name_and_location(sell_search_query).order(updated_at: :desc).last
buy_commodity
sell_commodity
c
buy_commodity
buy_search_query
c
Commodity.create(name:"WiDow", sell:10456, updated_at: Time.now, buy:0, location:"Nuen Waste Management", vice:true)
buy_search_query
buy_commodity
sell_commodity
Commodity.last
c
Commodity.last
Commodity.create(name:"WiDow", sell:0.0, updated_at: Time.now, buy:13100, location:"GrimHex", vice:true)
Commodity.where(name:"WiDow").first
Commodity.where(name:"WiDow").last
Commodity.find_by_name("WiDow").last
Commodity.find_by_name("WiDow")
buy_search_query
buy_commodity
sell_commodity
sell_search_query
sell_commodity
c
usership_params[:model]
usership_params
params
params[:ship_model]
c
all_ships.count
exit
c
ccc
c
cc
ccc
c
cc
c
cc
c
cc
c
cc
c
ccc
c
cc
c
all_ships.count
c
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)[200~all_ships = Usership.where(user_id: self.id, ship_name: ship.model)~
all_ships.count
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
ship.model
ship.Model
c
Usership.first
ship.model
ship_model
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
c
all_ships.count
all_ships = Usership.where(user_id: self.id, ship_name: ship.model)
ship.model
ship
Usership.where(user_id: self.id, ship_name: ship.model)
sership.where(user_id: self.id, ship_name: ship.model)
sership.where(user_id: self.id, ship_name: ship.model)]]]]
c
@usership.update(user_id:current_user.id)
@usership = Usership.new(usership_params)
@usership.update(user_id:current_user.id)
Usership.new(usership_params)
usership_params
c
usership_params
c
 @usership.errors.full_messages
 @usership.full_messages
 @usership.update(user_id: 2).full_messages
 @usership.update(user_id: 2).errors.full_messages
 @usership.update(user_id: 2)
 @usership.update(user_id: current_user.id)
 @usership.update(user_id:current_user.id)
@usership
current_user.id
current_user
@usership.update(user_id:current_user.id)
@usership = Usership.new(usership_params)
Ship.find_by_model("600i Executive Edition")
params
c
