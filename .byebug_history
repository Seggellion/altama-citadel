c
StarBitizenRun.last.update(twitch_channel:136591885)
self.twitch_id
StarBitizenRun.last
c
root_url
root_path
params
paarams
request.subdomain
request
c
current_user.task_manager.tasks.find_by(name: "User profile")
current_user.task_manager.tasks
current_user.task_manager
current_user
@current_user
@user
c
Task.last.task_manager.user.username
Task.last.task_manager.user
Task.last.task_manager
Task.last.user
Task.last.username
Task.last
Task
c
Task.last
current_user
user
@current_user
@user
session[:username]
c
session[:username]
c
session[:username]
c
@current_user
@user
session[:username]
session
current_user
c
current_user = User.find_by_username(@user.username)
@user
session
session[:username]
c
@current_user
@user
@useer
current_user
session[:user_id]
session[:username]
session
c
request.env["omniauth.auth"]
@user
c
session[:username]
current_user
c
current_user
session[:username]
current_user
c
tokens
twitch_oauth_url
c
@current_user ||= User.find_by(username: session[:username]) if session[:username]
 @current_user ||= User.find_by(id: session[:username]) if session[:username]
@current_user ||= User.find_by(id: session[:username]) if session[:username
User.find_by(id: session[:username]) if session[:username]
session[:username]
User.find_by(id: session[:username]) if session[:username]
 @current_user ||= User.find_by(id: session[:user_id]) if session[:user_id]
c
user
user = User.find_by_username(session[:username])
session[:username]
current_user
c
@current_user
current_user
c
session[:username]
c
session[:username]
user_signed_in?
c
!session[:user_id].nil?
logged_in?
session[:username]
params
c
params
current_user
c
current_user
c
session[:username]
c
session[:username]
c
current_user.username
c
session[:username]
current_user
c
current_user.username
current_user
params
c
session[:username]
params
c
x
params
session[:username]
current_user
c
params[:username]
current_user
c
user_info
params
self.id
this
self
sel
params
self
current_user
user
@current_user
c
token
c
client.email
client.enauk
client
client.get_user_info(token: token)
twitch_client = Twitch::Client.new(tokens: tokens)
client.get_streams.data
client.get_user_info(token: token)
token
client
c
twitch_client = TwitchOAuth2::Client.new
n
code
n
params
code
cod
c
params[:code]
params
c
to_user_id
StarBitizenRun.find_by(user_id: to_user_id, twitch_channel: @twitch_channel, profit: 0)
@json_request["twitch_channel"]
c
@twitch_channel
c
StarBitizenRun.last.user
StarBitizenRun.last
StarBitizen.last
User.where("username ILIKE ?", player_name).
player_name
@json_request["player_name"]
c
@twitch_channel
c
twitch_channel
c
twitch_channel
c
twitch_channel
c
starbits
capital
c
n
buy_commodity.inventory > 0
buy_commodity.inventory
records_exist
c
@sell_commodity
c
Location.find_by_name("Area18 - TDD").update(trade_terminal:true)
Location.find_by_name("Area18 - TDD")
records_exist
c
@to_user 
@total_units
@buy_commodity
from_location
c
Location.find_by_name("Shubin Mining Facility SCD-1").update(trade_terminal:true)
Location.find_by_name("Shubin Mining Facility SCD-1")
Location.where(trade_terminal:true)
from_location
@commodity_name
@sell_commodity 
@buy_commodity
c
@buy_commodity
buy_commodity.inventory
buy_commodity.inventory > 0
records_exist
c
twitch_channel
n
 @json_request["twitch_channel"].to_i
@json_request["twitch_channel"]
c
self.session_users.split(',').count
self.session_users.count
self
c
Task.last.update(state:"")
Task.last
 Task.all.detect { |task| task.name && task_name && task_name.downcase.include?(task.name.downcase) }
Task.all
task.name
task
Task.last
@current_task
c
profit = sell_total - buy_total
buy_total = sell_commodity_scu * buy_commodity_price
buy_total
sell_commodity_scu
buy_total
sell_total
profit
c
MilkRun.last
used_scu - sell_commodity_scu
used_scu
used_scu = MilkRun.where(trade_session_id: trade_session_id, user_id: commodity_user_id, sell_commodity_id:nil).sum(:buy_commodity_scu)
used_scu
sell_commodity_scu = params[:milk_run][:sell_commodity_scu].to_i
sell_commodity_scu
MilkRun.last
params
used_scu
c
params[:milk_run][:public]
params
c
paramsc
params
params[:milk_run][:sell_location]
